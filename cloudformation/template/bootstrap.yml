AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  CloudFormation template to create an ECR repository, roles, policies and CloudWatch Log Group.

Parameters:
  ApplicationName:
    Type: String
    Description: The name of the application. Used to name the resources.

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ApplicationName}-ecr"
      ImageTagMutability: MUTABLE
      ImageScanningConfiguration:
        ScanOnPush: false
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 2 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 2
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  ECRRepositoryService:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ApplicationName}-service-ecr"
      ImageTagMutability: MUTABLE
      ImageScanningConfiguration:
        ScanOnPush: false
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 2 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 2
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  ECRRepositoryRabbitMQ:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ApplicationName}-rabbitmq-ecr"
      ImageTagMutability: MUTABLE
      ImageScanningConfiguration:
        ScanOnPush: false
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 2 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 2
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${ApplicationName}-api-gw"

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: execution_role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  ExecutionRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: execution_role_policy
      Roles:
        - !Ref ExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'ecr:GetAuthorizationToken'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:PutImage'
              - 'ecr:ListImages'
              - 'logs:CreateLogStream'
              - 'logs:CreateLogGroup'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogStreams'
              - 'secretsmanager:GetSecretValue'
              - 'ssm:GetParameters'
              - 'ecs:ExecuteCommand'
              - 'ssm:StartSession'
              - 'ecs:DescribeTasks'
              - 'ecs:ListClusters'
              - 'ecs:ListContainerInstances'
              - 'ecs:DescribeContainerInstances'
              - 'ssmmessages:CreateControlChannel'
              - 'ssmmessages:CreateDataChannel'
              - 'ssmmessages:OpenControlChannel'
              - 'ssmmessages:OpenDataChannel'
            Resource: '*'

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: task_role
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  ApiGatewayCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: APIGatewayCloudWatchLogsRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiGatewayCloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                  - 'logs:FilterLogEvents'
                Resource: '*'

Outputs:
  ECRRepositoryName:
    Description: The name of the ECR repository.
    Value: !Ref ECRRepository
  ECRRepositoryArn:
    Description: The ARN of the ECR repository.
    Value: !GetAtt ECRRepository.Arn
  ECRRepositoryUri:
    Description: The URI of the ECR repository.
    Value: !GetAtt ECRRepository.RepositoryUri

  ECRServiceRepositoryName:
    Description: The name of the Service ECR repository.
    Value: !Ref ECRRepositoryService
  ECRServiceRepositoryArn:
    Description: The ARN of the Service ECR repository.
    Value: !GetAtt ECRRepositoryService.Arn
  ECRServiceRepositoryUri:
    Description: The URI of the Service ECR repository.
    Value: !GetAtt ECRRepositoryService.RepositoryUri

  ECRRabbitMQRepositoryName:
    Description: The name of the RabbitMQ ECR repository.
    Value: !Ref ECRRepositoryRabbitMQ
  ECRRabbitMQRepositoryArn:
    Description: The ARN of the RabbitMQ ECR repository.
    Value: !GetAtt ECRRepositoryRabbitMQ.Arn
  ECRRabbitMQRepositoryUri:
    Description: The URI of the RabbitMQ ECR repository.
    Value: !GetAtt ECRRepositoryRabbitMQ.RepositoryUri

  ApiGatewayLogGroupName:
    Description: The name of the CloudWatch Log Group for the API Gateway.
    Value: !Ref ApiGatewayLogGroup
  ExecutionRoleArn:
    Description: ARN of the ECS Execution Role
    Value: !GetAtt ExecutionRole.Arn
    Export:
      Name: ExecutionRoleArn
  TaskRoleArn:
    Description: ARN of the ECS Task Role
    Value: !GetAtt TaskRole.Arn
    Export:
      Name: TaskRoleArn
  ApiGatewayCloudWatchLogsRoleArn:
    Description: ARN of the API Gateway CloudWatch Logs Role
    Value: !GetAtt ApiGatewayCloudWatchLogsRole.Arn
    Export:
      Name: ApiGatewayCloudWatchLogsRoleArn

